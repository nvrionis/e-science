---
  - name: Disable ipv6
    sysctl: "name={{item.name}} value={{item.value}} state={{item.state}}"
    tags: postconfig
    with_items:
       - { name: 'net.ipv6.conf.all.disable_ipv6', value: '1', state: 'present' }
       - { name: 'net.ipv6.conf.default.disable_ipv6', value: '1', state: 'present' }
       - { name: 'net.ipv6.conf.lo.disable_ipv6', value: '1', state: 'present' }

  - name: Change ssh_config to ssh from master with no StrictHostKeyCheck,command1
    lineinfile: dest=/etc/ssh/ssh_config regexp='ask' line='StrictHostKeyChecking no' state=present
    tags: postconfig

  - name: Change ssh_config to ssh from master with no StrictHostKeyCheck,command2
    lineinfile: dest=/etc/ssh/ssh_config line='UserKnownHostsFile=/dev/null' insertafter='EOF' state=present
    tags: postconfig

  - name: Remove second line of /etc/hosts
    lineinfile: dest=/etc/hosts regexp='^127\.0\.1\.1' state=absent
    tags: postconfig

  - name: Add virtual machine private ips in /etc/hosts
    template: src=hosts.j2 dest={{etchosts_filename}}
    tags: postconfig

  - name: Append the host file
    shell: cat {{etchosts_filename}} >> /etc/hosts
    tags: postconfig

  - stat: path="{{ ssh_file_name }}"
    tags: postconfig
    register: p
    delegate_to: 127.0.0.1

  - name: create master vm root user ssh key
    user: name=root generate_ssh_key=yes shell=/bin/bash state=present
    tags: postconfig
    when: is_master

  - name: copy master root public ssh key to local box
    tags: postconfig
    fetch: src=/root/.ssh/id_rsa.pub dest=/tmp/{{master_key_root}} flat=yes
    when: is_master

  - name: copy local box master root ssh key to root every VM
    tags: postconfig
    authorized_key: user=root key="{{ item }}"
    with_file:
      - /tmp/{{master_key_root}}
    when: is_slave

  - name: copy yarn configuration xml and kamakirc files in every node
    tags: postconfig
    template: "src={{item.src}} dest={{item.dest}}"
    with_items: 
      - { src: 'core-site.j2', dest: '/etc/hadoop/conf/core-site.xml' }
      - { src: 'mapred-site.j2', dest: '/etc/hadoop/conf/mapred-site.xml' }
      - { src: 'hdfs-site.j2', dest: '/etc/hadoop/conf/hdfs-site.xml' }
      - { src: 'yarn-site.j2', dest: '/etc/hadoop/conf/yarn-site.xml' }

  - name: create slaves files in cloudera master node
    tags: postconfig
    template: src=slaves.j2 dest=/etc/hadoop/conf/slaves
    when: is_master

  - name: create local storage directories in namenode
    tags: postconfig
    file: "dest={{item.dest}} mode={{item.mode}} owner={{item.owner}} group={{item.group}} state={{item.state}}"
    with_items:
      - { dest: '/data/1/dfs/nn', mode: '700', owner: 'hdfs', group: 'hdfs', state: 'directory' }
      - { dest: '/nfsmount/dfs/nn', mode: '700', owner: 'hdfs', group: 'hdfs', state: 'directory' }
    when: is_master

  - name: create local storage directories in datanodes
    tags: postconfig
    file: "dest={{item.dest}} mode={{item.mode}} owner={{item.owner}} group={{item.group}} state={{item.state}}"
    with_items:
      - { dest: '/data/1/dfs/dn', mode: '700', owner: 'hdfs', group: 'hdfs', state: 'directory' }
      - { dest: '/data/2/dfs/dn', mode: '700', owner: 'hdfs', group: 'hdfs', state: 'directory' }
      - { dest: '/data/3/dfs/dn', mode: '700', owner: 'hdfs', group: 'hdfs', state: 'directory' }
      - { dest: '/data/4/dfs/dn', mode: '700', owner: 'hdfs', group: 'hdfs', state: 'directory' }
    when: is_slave

  - name: create local storage directories in all nodes
    tags: postconfig
    file: "dest={{item.dest}} mode={{item.mode}} owner={{item.owner}} group={{item.group}} state={{item.state}}"
    with_items:
      - { dest: '/data/1/yarn/local', mode: '755', owner: 'yarn', group: 'yarn', state: 'directory' }
      - { dest: '/data/2/yarn/local', mode: '755', owner: 'yarn', group: 'yarn', state: 'directory' }
      - { dest: '/data/3/yarn/local', mode: '755', owner: 'yarn', group: 'yarn', state: 'directory' }
      - { dest: '/data/4/yarn/local', mode: '755', owner: 'yarn', group: 'yarn', state: 'directory' }
      - { dest: '/data/1/yarn/logs', mode: '755', owner: 'yarn', group: 'yarn', state: 'directory' }
      - { dest: '/data/2/yarn/logs', mode: '755', owner: 'yarn', group: 'yarn', state: 'directory' }
      - { dest: '/data/3/yarn/logs', mode: '755', owner: 'yarn', group: 'yarn', state: 'directory' }
      - { dest: '/data/4/yarn/logs', mode: '755', owner: 'yarn', group: 'yarn', state: 'directory' }