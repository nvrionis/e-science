---
  - name: create directory for projects
    tags: postimage
    file: path={{my_project_dir}} state=directory

  - name: Git clone e-science project in the git directory
    tags: postimage
    git: repo={{escience_repo}} dest={{my_project_dir}}/{{my_project_name}} version={{escience_version|default(origin)}}

  - name: Copy Java dist directory in ansible folder for yarn role
    tags: postimage
    command: cp -r {{path_to_java_dirs}}/dist/ {{settings_path}}/ansible/roles/yarn/files

  - name: Copy Java lib directory in ansible folder for yarn role
    tags: postimage
    command: cp -r {{path_to_java_dirs}}/lib/ {{settings_path}}/ansible/roles/yarn/files

  - name: Copy Java dist directory in ansible folder for cloudera role
    tags: postimage
    command: cp -r {{path_to_java_dirs}}/dist/ {{settings_path}}/ansible/roles/cloudera/files

  - name: Copy Java lib directory in ansible folder for cloudera role
    tags: postimage
    command: cp -r {{path_to_java_dirs}}/lib/ {{settings_path}}/ansible/roles/cloudera/files

  - name: Install orka as a python package
    tags: postimage
    sudo: yes
    pip: name={{project_path}}/orka chdir={{project_path}}

  - name: Change owner of conf and logs
    file: path={{user_home}}/{{item}} recurse=yes state=directory
    tags: postimage
    with_items:
      - conf
      - logs

  - name: Copy settings.j2 file
    tags: postimage
    template: src=settings.j2 owner=orka_admin mode=0744 dest={{settings_path}}/settings.py

  - name: Edit pg_hba.conf
    sudo: yes
    lineinfile: line="local\tall\t\tpostgres\t\t\t\ttrust" dest=/etc/postgresql/9.1/main/pg_hba.conf state=present regexp="local(\s)+all(\s)+postgres(\s)+(?=peer)" backrefs=yes
    tags: postimage

  - name: Restart PostgreSql service
    sudo: yes
    service: name=postgresql state=restarted
    tags: postimage

  - name: Create PostgreSql user
    sudo: yes
    postgresql_user: name={{db_user}} password={{db_password}} role_attr_flags=CREATEDB,NOSUPERUSER,NOCREATEROLE
    tags: postimage

  - name: Create PostgreSql database
    sudo: yes
    postgresql_db: name={{db_name}} owner={{db_user}}
    tags: postimage

  - name: Copy Orka database update sql file
    tags: postimage
    copy: src={{orka_db_sql_script}} dest={{my_project_dir}} owner=orka_admin mode=0744

  - name: Django project syncdb
    django_manage: command=syncdb app_path={{project_path}}/{{webapp_dir}}
    tags: postimage

  - name: Django project migrate
    django_manage: command=migrate app_path={{project_path}}/{{webapp_dir}}
    tags: postimage

  - name: Run orka scripts for database update-insert predefined tables
    sudo: yes
    shell: sudo -u postgres PGPASSWORD={{db_password}} psql -h localhost -U {{db_user}} -d {{db_name}} -f {{my_project_dir}}/{{orka_db_sql_script}}
    tags: postimage

  - name: Revert pg_hba.conf to default
    sudo: yes
    lineinfile: line="local\tall\t\tpostgres\t\t\t\tpeer" dest=/etc/postgresql/9.1/main/pg_hba.conf state=present regexp="local(\s)+all(\s)+postgres(\s)+(?=trust)" backrefs=yes
    tags: postimage

  - name: Restart PostgreSql service
    sudo: yes
    service: name=postgresql state=restarted
    tags: postimage

  - name: Create Django superuser
    shell: echo "from django.contrib.auth.models import User; User.objects.create_superuser('{{django_admin_name}}', '{{django_admin_email}}', '{{django_admin_password}}')" | python manage.py shell chdir={{my_project_dir}}/{{my_project_name}}/{{webapp_dir}}
    tags: postimage

  - name: Copy uwsgi.ini file
    tags: postimage
    copy: src=uwsgi.ini dest=./conf owner=orka_admin mode=0744

  - name: Copy nginx.conf file
    tags: postimage
    template: src=nginx.j2 dest=./conf owner=orka_admin

  - name: Rename nginx.j2 template to nginx.conf
    tags: postimage
    command: mv nginx.j2 nginx.conf chdir=./conf
  
  - name: Edit ngnix.conf in /etc/nginx
    sudo: yes
    lineinfile: line="include {{user_home}}/conf/nginx.conf;" insertafter="http {" dest="/etc/nginx/nginx.conf"
    tags: postimage

  - name: Copy encryption file for ~okeanos token
    copy: src={{local_encrypt_file_path}} dest={{remote_encrypt_file_path}} owner=orka_admin
    tags: postimage

  - name: Restart Nginx service
    sudo: yes
    service: name=nginx state=restarted
    tags: postimage

  - name: Install uwsgi-plugin-python
    apt: name=uwsgi-plugin-python state=present
    sudo: yes
    tags: postimage

  - name: Start uWSGI service
    tags: postimage
    command: uwsgi --ini {{user_home}}/conf/uwsgi.ini
    args:
      chdir: "{{project_path}}/{{webapp_dir}}"

  - name: Run collectstatic command
    tags: postimage
    django_manage: command=collectstatic app_path={{project_path}}/{{webapp_dir}}

  - name: Run celery as a daemon
    tags: postimage
    command: celery multi start celeryworker1 --loglevel=INFO --app=backend.celeryapp --pidfile=/tmp/\%n.pid --logfile=$HOME/logs/\%h.log
    args:
      chdir: "{{project_path}}/{{webapp_dir}}"